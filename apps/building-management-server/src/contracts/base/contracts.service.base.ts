/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  Contracts as PrismaContracts,
  RentHomes as PrismaRentHomes,
  Residents as PrismaResidents,
} from "@prisma/client";

export class ContractsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ContractsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.contracts.count(args);
  }

  async contractsItems(
    args: Prisma.ContractsFindManyArgs
  ): Promise<PrismaContracts[]> {
    return this.prisma.contracts.findMany(args);
  }
  async contracts(
    args: Prisma.ContractsFindUniqueArgs
  ): Promise<PrismaContracts | null> {
    return this.prisma.contracts.findUnique(args);
  }
  async createContracts(
    args: Prisma.ContractsCreateArgs
  ): Promise<PrismaContracts> {
    return this.prisma.contracts.create(args);
  }
  async updateContracts(
    args: Prisma.ContractsUpdateArgs
  ): Promise<PrismaContracts> {
    return this.prisma.contracts.update(args);
  }
  async deleteContracts(
    args: Prisma.ContractsDeleteArgs
  ): Promise<PrismaContracts> {
    return this.prisma.contracts.delete(args);
  }

  async getRentHome(parentId: string): Promise<PrismaRentHomes | null> {
    return this.prisma.contracts
      .findUnique({
        where: { id: parentId },
      })
      .rentHome();
  }

  async getResident(parentId: string): Promise<PrismaResidents | null> {
    return this.prisma.contracts
      .findUnique({
        where: { id: parentId },
      })
      .resident();
  }
}
