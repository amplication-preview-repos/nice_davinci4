/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { CollaboratorsListRelationFilter } from "../../collaborators/base/CollaboratorsListRelationFilter";
import { RentHomesListRelationFilter } from "../../rentHomes/base/RentHomesListRelationFilter";
import { CustomersWhereUniqueInput } from "../../customers/base/CustomersWhereUniqueInput";

@InputType()
class BuildingsWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  address?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => CollaboratorsListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CollaboratorsListRelationFilter)
  @IsOptional()
  @Field(() => CollaboratorsListRelationFilter, {
    nullable: true,
  })
  collaboratorsItems?: CollaboratorsListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RentHomesListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RentHomesListRelationFilter)
  @IsOptional()
  @Field(() => RentHomesListRelationFilter, {
    nullable: true,
  })
  rentHomesItems?: RentHomesListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CustomersWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CustomersWhereUniqueInput)
  @IsOptional()
  @Field(() => CustomersWhereUniqueInput, {
    nullable: true,
  })
  customer?: CustomersWhereUniqueInput;
}

export { BuildingsWhereInput as BuildingsWhereInput };
